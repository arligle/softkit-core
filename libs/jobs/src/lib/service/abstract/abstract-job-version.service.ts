import { BaseTrackedEntityHelper } from '@softkit/typeorm';
import { BaseTrackedEntityService } from '@softkit/typeorm-service';
import { BaseJobVersion, JobVersion } from '../../entity';
import {
  AbstractRepository,
  ITrackedRepository,
} from '@softkit/persistence-api';
import { JobVersionRepository } from '../../repository';

export abstract class AbstractJobVersionService<
  T extends BaseJobVersion = JobVersion,
  FIELDS_REQUIRED_FOR_UPDATE extends keyof T = 'id',
  AUTOGENERATED_FIELDS extends keyof T = keyof BaseTrackedEntityHelper | 'id',
  REPOSITORY extends AbstractRepository<
    T,
    'id',
    unknown,
    FIELDS_REQUIRED_FOR_UPDATE,
    AUTOGENERATED_FIELDS
  > &
    ITrackedRepository<T, 'id', unknown> = JobVersionRepository<
    T,
    'id',
    FIELDS_REQUIRED_FOR_UPDATE,
    AUTOGENERATED_FIELDS
  >,
> extends BaseTrackedEntityService<
  T,
  'id',
  REPOSITORY,
  FIELDS_REQUIRED_FOR_UPDATE,
  AUTOGENERATED_FIELDS
> {
  public abstract findJobVersionByJobDefinitionIdAndVersion(
    jobDefinitionId: string,
    jobVersion: number,
  ): Promise<BaseJobVersion | undefined>;

  public abstract findPreviousJobVersion(
    jobDefinitionId: string,
    newJobVersion: number,
  ): Promise<BaseJobVersion | undefined>;

  public abstract findLatestJobVersion(
    jobDefinitionId: string,
  ): Promise<BaseJobVersion>;
}
