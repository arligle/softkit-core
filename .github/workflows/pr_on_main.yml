# File for Pull Request on main branch
name: PR on main

# When a PR is opened to main
on:
  pull_request:
    branches:
      - main
    types: [ opened, reopened, synchronize ]


jobs:
  build:
    # Setup OS and Node Version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Latest node only
        node-version: [ 20.x ]

# Define Steps
steps:
  # Checkout code
  - uses: actions/checkout@v2
    with:
      ref: ${{ github.event.pull_request.head.ref }}
      fetch-depth: 0

  - name: Use Node.js ${{ matrix.node-version }}
    uses: actions/setup-node@v1
    with:
      node-version: ${{ matrix.node-version }}

  # Make sure we have all branches
  - name: Fetch other branches
    run: git fetch --no-tags --prune --depth=5 origin main

  - name: Get yarn cache directory path
    id: yarn-cache-dir-path
    run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

  - name: Cache yarn dependencies
    uses: actions/cache@v2
    id: yarn-cache
    with:
      path: |
        ${{ steps.yarn-cache-dir-path.outputs.dir }}
        **\node_modules
      key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      restore-keys: |
        ${{ runner.os }}-yarn-


  - name: Install environment
    if: steps.yarn-cache.outputs.cache-hit != 'true'
    run: yarn install --frozen-lockfile

  - name: Run lint
    run: nx affected:lint -- --base="origin/main"

  - name: Tests coverage
    run: nx affected:test -- --base="origin/main" --codeCoverage --parallel=false

  - name: Report to coveralls
    uses: coverallsapp/github-action@v2.2.0
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
